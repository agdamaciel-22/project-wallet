{"ast":null,"code":"// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nconst INITIAL_WALLET = {\n  currencies: [],\n  expenses: [],\n  editor: false,\n  idToEdit: 0 // valor numérico que armazena o id da despesa que esta sendo editada\n\n};\n\nfunction wallet() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_WALLET;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SAVE_CURRENCIES':\n      return { ...state,\n        currencies: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default wallet;","map":{"version":3,"names":["INITIAL_WALLET","currencies","expenses","editor","idToEdit","wallet","state","action","type","payload"],"sources":["/home/myrella/Área de Trabalho/projetos2/sd-021-b-project-trybewallet/src/reducers/wallet.js"],"sourcesContent":["// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nconst INITIAL_WALLET = {\n  currencies: [],\n  expenses: [],\n  editor: false,\n  idToEdit: 0, // valor numérico que armazena o id da despesa que esta sendo editada\n};\n\nfunction wallet(state = INITIAL_WALLET, action) {\n  switch (action.type) {\n  case 'SAVE_CURRENCIES':\n    return {\n      ...state,\n      currencies: action.payload,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default wallet;\n"],"mappings":"AAAA;AACA,MAAMA,cAAc,GAAG;EACrBC,UAAU,EAAE,EADS;EAErBC,QAAQ,EAAE,EAFW;EAGrBC,MAAM,EAAE,KAHa;EAIrBC,QAAQ,EAAE,CAJW,CAIR;;AAJQ,CAAvB;;AAOA,SAASC,MAAT,GAAgD;EAAA,IAAhCC,KAAgC,uEAAxBN,cAAwB;EAAA,IAARO,MAAQ;;EAC9C,QAAQA,MAAM,CAACC,IAAf;IACA,KAAK,iBAAL;MACE,OAAO,EACL,GAAGF,KADE;QAELL,UAAU,EAAEM,MAAM,CAACE;MAFd,CAAP;;IAIF;MACE,OAAOH,KAAP;EAPF;AASD;;AAED,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}